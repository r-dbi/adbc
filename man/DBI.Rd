% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Driver.R, R/Connection.R, R/Result.R,
%   R/ResultStream.R, R/dbBegin_Connection.R, R/dbBind_Result.R,
%   R/dbClearResult_Result.R, R/dbClearResult_ResultStream.R,
%   R/dbColumnInfo_Result.R, R/dbCommit_Connection.R,
%   R/dbConnect_Driver.R, R/dbDataType_Connection.R, R/dbDataType_Driver.R,
%   R/dbDataType_Driver_list.R, R/dbDisconnect_Connection.R,
%   R/dbExistsTable_Connection_character.R, R/dbFetch_Result.R,
%   R/dbGetInfo_Connection.R, R/dbGetInfo_Driver.R, R/dbGetInfo_Result.R,
%   R/dbGetRowCount_Result.R, R/dbGetRowsAffected_Result.R,
%   R/dbGetStatement_Result.R, R/dbHasCompleted_Result.R,
%   R/dbIsValid_Connection.R, R/dbIsValid_Driver.R,
%   R/dbIsValid_Result.R, R/dbListFields_Connection_character.R,
%   R/dbListTables_Connection.R, R/dbQuoteIdentifier_Connection_character.R,
%   R/dbQuoteString_Connection_character.R,
%   R/dbRemoveTable_Connection_character.R, R/dbRollback_Connection.R,
%   R/dbSendQueryStream_Connection.R, R/dbSendQuery_Connection_character.R,
%   R/dbSendStatement_Connection_character.R, R/dbStream_ResultStream.R,
%   R/dbWriteTable_Connection_character_data.frame.R, R/show_Connection.R,
%   R/show_Driver.R, R/show_Result.R
\docType{class}
\name{DBI}
\alias{DBI}
\alias{adbcDriver-class}
\alias{adbcConnection-class}
\alias{adbcResult-class}
\alias{adbcResultStream-class}
\alias{dbBegin_adbcConnection}
\alias{dbBegin,adbcConnection-method}
\alias{dbBind_adbcResult}
\alias{dbBind,adbcResult-method}
\alias{dbClearResult_adbcResult}
\alias{dbClearResult,adbcResult-method}
\alias{dbClearResult_adbcResultStream}
\alias{dbClearResult,adbcResultStream-method}
\alias{dbColumnInfo_adbcResult}
\alias{dbColumnInfo,adbcResult-method}
\alias{dbCommit_adbcConnection}
\alias{dbCommit,adbcConnection-method}
\alias{dbConnect_adbcDriver}
\alias{dbConnect,adbcDriver-method}
\alias{dbDataType_adbcConnection}
\alias{dbDataType,adbcConnection,ANY-method}
\alias{dbDataType_adbcDriver}
\alias{dbDataType,adbcDriver,ANY-method}
\alias{dbDataType_adbcDriver_list}
\alias{dbDataType,adbcDriver,list-method}
\alias{dbDisconnect_adbcConnection}
\alias{dbDisconnect,adbcConnection-method}
\alias{dbExistsTable_adbcConnection_character}
\alias{dbExistsTable,adbcConnection,character-method}
\alias{dbFetch_adbcResult}
\alias{dbFetch,adbcResult-method}
\alias{dbGetInfo_adbcConnection}
\alias{dbGetInfo,adbcConnection-method}
\alias{dbGetInfo_adbcDriver}
\alias{dbGetInfo,adbcDriver-method}
\alias{dbGetInfo_adbcResult}
\alias{dbGetInfo,adbcResult-method}
\alias{dbGetRowCount_adbcResult}
\alias{dbGetRowCount,adbcResult-method}
\alias{dbGetRowsAffected_adbcResult}
\alias{dbGetRowsAffected,adbcResult-method}
\alias{dbGetStatement_adbcResult}
\alias{dbGetStatement,adbcResult-method}
\alias{dbHasCompleted_adbcResult}
\alias{dbHasCompleted,adbcResult-method}
\alias{dbIsValid_adbcConnection}
\alias{dbIsValid,adbcConnection-method}
\alias{dbIsValid_adbcDriver}
\alias{dbIsValid,adbcDriver-method}
\alias{dbIsValid_adbcResult}
\alias{dbIsValid,adbcResult-method}
\alias{dbListFields_adbcConnection_character}
\alias{dbListFields,adbcConnection,character-method}
\alias{dbListTables_adbcConnection}
\alias{dbListTables,adbcConnection-method}
\alias{dbQuoteIdentifier_adbcConnection_character}
\alias{dbQuoteIdentifier,adbcConnection,character-method}
\alias{dbQuoteString_adbcConnection_character}
\alias{dbQuoteString,adbcConnection,character-method}
\alias{dbRemoveTable_adbcConnection_character}
\alias{dbRemoveTable,adbcConnection,character-method}
\alias{dbRollback_adbcConnection}
\alias{dbRollback,adbcConnection-method}
\alias{dbSendQueryStream_adbcConnection}
\alias{dbSendQueryStream,adbcConnection-method}
\alias{dbSendQuery_adbcConnection_character}
\alias{dbSendQuery,adbcConnection,character-method}
\alias{dbSendStatement_adbcConnection_character}
\alias{dbSendStatement,adbcConnection,character-method}
\alias{dbStream_adbcResultStream}
\alias{dbStream,adbcResultStream-method}
\alias{dbWriteTable_adbcConnection_character_data.frame}
\alias{dbWriteTable,adbcConnection,character,data.frame-method}
\alias{show_adbcConnection}
\alias{show,adbcConnection-method}
\alias{show_adbcDriver}
\alias{show,adbcDriver-method}
\alias{show_adbcResult}
\alias{show,adbcResult-method}
\title{DBI methods}
\usage{
\S4method{dbBegin}{adbcConnection}(conn, ...)

\S4method{dbBind}{adbcResult}(res, params, ...)

\S4method{dbClearResult}{adbcResult}(res, ...)

\S4method{dbClearResult}{adbcResultStream}(res, ...)

\S4method{dbColumnInfo}{adbcResult}(res, ...)

\S4method{dbCommit}{adbcConnection}(conn, ...)

\S4method{dbConnect}{adbcDriver}(drv, ...)

\S4method{dbDataType}{adbcConnection,ANY}(dbObj, obj, ...)

\S4method{dbDataType}{adbcDriver,ANY}(dbObj, obj, ...)

\S4method{dbDataType}{adbcDriver,list}(dbObj, obj, ...)

\S4method{dbDisconnect}{adbcConnection}(conn, ...)

\S4method{dbExistsTable}{adbcConnection,character}(conn, name, ...)

\S4method{dbFetch}{adbcResult}(res, n = -1, ...)

\S4method{dbGetInfo}{adbcConnection}(dbObj, ...)

\S4method{dbGetInfo}{adbcDriver}(dbObj, ...)

\S4method{dbGetInfo}{adbcResult}(dbObj, ...)

\S4method{dbGetRowCount}{adbcResult}(res, ...)

\S4method{dbGetRowsAffected}{adbcResult}(res, ...)

\S4method{dbGetStatement}{adbcResult}(res, ...)

\S4method{dbHasCompleted}{adbcResult}(res, ...)

\S4method{dbIsValid}{adbcConnection}(dbObj, ...)

\S4method{dbIsValid}{adbcDriver}(dbObj, ...)

\S4method{dbIsValid}{adbcResult}(dbObj, ...)

\S4method{dbListFields}{adbcConnection,character}(conn, name, ...)

\S4method{dbListTables}{adbcConnection}(conn, ...)

\S4method{dbQuoteIdentifier}{adbcConnection,character}(conn, x, ...)

\S4method{dbQuoteString}{adbcConnection,character}(conn, x, ...)

\S4method{dbRemoveTable}{adbcConnection,character}(conn, name, ..., temporary = FALSE, fail_if_missing = TRUE)

\S4method{dbRollback}{adbcConnection}(conn, ...)

\S4method{dbSendQueryStream}{adbcConnection}(conn, statement, ..., params = NULL)

\S4method{dbSendQuery}{adbcConnection,character}(conn, statement, ..., params = NULL)

\S4method{dbSendStatement}{adbcConnection,character}(conn, statement, ..., params = NULL)

\S4method{dbStream}{adbcResultStream}(res, ...)

\S4method{dbWriteTable}{adbcConnection,character,data.frame}(
  conn,
  name,
  value,
  overwrite = FALSE,
  append = FALSE,
  ...,
  field.types = NULL,
  row.names = NULL,
  temporary = FALSE
)

\S4method{show}{adbcConnection}(object)

\S4method{show}{adbcDriver}(object)

\S4method{show}{adbcResult}(object)
}
\arguments{
\item{conn}{A \linkS4class{DBIConnection} object, as returned by
\code{\link[DBI:dbConnect]{dbConnect()}}.}

\item{...}{Other parameters passed on to methods.}

\item{res}{An object inheriting from \linkS4class{DBIResult}.}

\item{params}{A list of bindings, named or unnamed.}

\item{drv}{an object that inherits from \linkS4class{DBIDriver},
or an existing \linkS4class{DBIConnection}
object (in order to clone an existing connection).}

\item{dbObj}{A object inheriting from \linkS4class{DBIDriver}
or \linkS4class{DBIConnection}}

\item{obj}{An R object whose SQL type we want to determine.}

\item{name}{The table name, passed on to \code{\link[DBI:dbQuoteIdentifier]{dbQuoteIdentifier()}}. Options are:
\itemize{
\item a character string with the unquoted DBMS table name,
e.g. \code{"table_name"},
\item a call to \code{\link[DBI:Id]{Id()}} with components to the fully qualified table name,
e.g. \code{Id(schema = "my_schema", table = "table_name")}
\item a call to \code{\link[DBI:SQL]{SQL()}} with the quoted and fully qualified table name
given verbatim, e.g. \code{SQL('"my_schema"."table_name"')}
}}

\item{n}{maximum number of records to retrieve per fetch. Use \code{n = -1}
or \code{n = Inf}
to retrieve all pending records.  Some implementations may recognize other
special values.}

\item{x}{A character vector, \link[DBI]{SQL} or \link[DBI]{Id} object to quote as identifier.}

\item{statement}{a character string containing SQL.}

\item{value}{a \link{data.frame} (or coercible to data.frame).}

\item{overwrite}{Allow overwriting the destination table. Cannot be
\code{TRUE} if \code{append} is also \code{TRUE}.}

\item{append}{Allow appending to the destination table. Cannot be
\code{TRUE} if \code{overwrite} is also \code{TRUE}.}

\item{object}{Any R object}
}
\description{
Implementations of pure virtual functions defined in the \code{DBI} package.
}
